This file contains changelog of samplerbox.py
For changes on samplerbox_audio.pyx, see top of the source file

Feb-Mar 2022:
  - Added aftertouch
    Channel: all "continuous" functions
    PolyPhonic:
     - Volume
     - Pan
     - Pitch
     - CymbalChoke = Damp
     - Notepairs = apply effect on other note(s) too
  - Lifted "127" restriction on %release and %xfadein/out
  - Added %pan parameter for positioning mono samples
  - Code cosmetics
Jan-Feb 2022:
  - Cosmetic change on the LCDmenu webgui screen.
  - Code cosmetics
  - Last minute bug fixes before public release 220206
Oct-Dec 2021:
  - Changed and added configuration parameters for the drumpad
    This enables the drumpad to optionally send programchanges and/or CC-messages.
  - Added (very) experimental support for midi recording
  - Split off and optimized display routines initialization in separate module
    This also made the LEDs independent of the mutual exclusive character displays
    .. in other words you can have LED's plus a character display !
  - Added multi-withmaster device, a combination of the master and an MT device
  - Added layered voices (=more sounds per note)
  - Added %gain for SMF
  - Several bug fixes and code cosmetics for readability
End 2020-Sept 2021:
  - Image built from scratch, changes not to be mentioned here
  - Converted to python 3, lots of changes, most impact:
    - configuration.txt layout changed, real extreme make-over
    - folder structure adapted, ao to ease setting up without orginal image
  - Added effects presets on set+voice level
    For this effects presets are moved from configuration.txt to FXpresets.csv
  - Bugfixes, cleanups and split off more functions to modules

#----- python 2.7 train stops here to focus on new image with python 3 -----#
Sbox20210521.zip is last original samplerbox based image with python 2.7
Github updates after that date:
  - Added support for cheap ebay HT16K33 I2C 7-segment displays
  - Updated look of the Pimoroni display
  - Fixed bug(s)
Feb-May 2021:
  - Added OLED SSD1306 support
  - Made console log of smfplayer more informative
  - Show connected midi devices in the GUI and LCD/OLED display
  - Changing midichannel via buttons & GUI did not work anymore, fixed
    Placed changing midichannel in main dashboard
  - Show distribution image info in consolelog if applicable
  - Changed /samples partition on image to NTFS
    - it can be accessed from windows
    - changed remount procedure for updating set configuration files, placed this in 
    - new general procedure module gp.py (other subs will be moved there later)
    - improved test on running from SD image (on SD readonly is assumed, thus requiring remounts)
  - Extra examples in wifistatips (also contains example for fixed wired address)
  - Bugfixes
    - mode=once: subsequent keypress now restarts again as intended/documented
    - using less than 3 buttons didn't function and made the menu system crash
    - the "loading sampleset" message on the displays was wiped immediately
  - If a USB storage device contains no potential samplesets, the internal SD space will be used.
    - valid for microcontrollers using USB both for programming and MIDI, e.g. Pi Pico.
    - potential samplesets are recognized by name starting with digits followed by a space.
    - yes, this is mutually exclusive and not 100% fool proof. Consider serial midi...
  - Limited midi-through, see docs (configuration & usage)
  - Added support for Pimaroni Audio Pirate HAT w LCD
  - Rewritten serial midi logic to comply with MIDI standards (and get proper midi-thru)
  - Fixed piling/accumulating of same sustaining notes
  - Code cleanups
Sept-Nov 2020:
  - Extended midimon.py to support serial midi
  - Fixed bug for LED's (red blinking when all is OK)
  - Show WiFi strength to console, GUI and displays
  - Added peak limiter
  - Made initial state of the filters/effects configurable in configuration.txt
  - Added overdrive distortion
  - Prepared for making filter order configurable
  - cleanups
Jun-Aug 2020:
  - Fixed bug when midi device selects not-existing preset
  - Added backtrack stop option
  - Possibility to fix ip-address on known wifi network(s)
May 2020:
  - Removed limit of 127 voices
  - Added I2C-LCD (HD44780, 2x16 and 4x20).
    Support is theoretical as I can't test this, please feedback results.
  - Added support for program changes in multitimbrals
  - Created possibility to show the IP-address(es) on user interfaces
April 2020:
  - button menu can be operated via MIDI and webgui (simulates display).
  - webgui can handover info to next screen via both cookies and url parameters
  - webgui modernized using more sophisticated style elements
  - added random samples / played note for "human touch"
  - bugfixes
Jan-March 2020:
  - Introduced user interface module = make SB-engine a black box with a predictable/documented API
  - WebGUI adapted for this approach (for giving show&testcase)
  - added button menu for LCD/OLED and GPIO buttons
  - bugfixes
Oct-Dec 2019:
  - Fixed notemapping GUI screen
  - Finished embedded release samples (relsample=E)
    Configuration.txt parameter RELSAMPLE changed to BOXRELSAMPLE
  - Added separate release samples (relsample=S)
  - Added dampnoise feature (useful for dampers, rattling snares, funny synth effects etcetara)
  - Added (%)%fillnote=F : This fills missing notes with "same pitch" notes.
    So you can define separate damper noise that won't change pitch when generated
  - Bugfixed arpeggiator and added release sample processing to it
  - Reduced overhead in velocity table and related processing
    As a result, granularity of velocity samples can be defined per sample
  - Velocity mode (sample or accurate) can be specified per sample
  - Wav's are now read only once if reused
  - Added mutegroups
  - Removed %mode=mono. Code was clumsy and became redundant:
    %mode=loo2,%mutegroup=x now achieves exactly the same
  - Added relsamples to sustain
  - Autodetect audio device & alsamixer, moved all related coding to separate module
  - Changed DAC volume control to logarithmic iso linear making it more human
    Sideffect: the set value slightly differs from actual value due to roundings
  - Wifi now either connects to known wifi or starts hotspot (mainly OS update)
  - Support for multimbral devices = using multiple midi channels and independent voices
  - Internal SMF player: can play ".mid" files in the samples directory
  - Various cleanups and fixes
Aug-Sept 2019:
  - Adapted sustain pedal for "half-damper" compatibility.
    ==> This makes this a continuous controller acting as switch !!
        In other words: it translates non zero values just to "damp"
  - Fixed voice changing via notemapping
  - Fixed old settings of serial midi in startup configs - now it works again :-)
  - the usual small stuff
May-July 2019:
  - Possibility to map notes from channel 10 (drumpad) in the active channel
  - Added notemap editing in GUI (editing module can be used in/for other UI's).
  - Allowed for empty/comment lines in definition.txt
  - Avoid program freezes with configuration parameter for maximizing the memory usage after sample loading
    Loading of wav-files stops after exceeding max. Startup messages show skipped notes.
  - Removed (%)%qcent, incorrectly implemented.
    Correct implementation requires extra table & processing; notemapping gives sufficient alternative.
  - Corrected setting/processing CC control of arpeggiator/effects/filters
  - bug fixes, cleanups and cosmetic changes
March/April 2019:
  - Added effects/filters: Wah's, Delay/flanger, Moog lowpass and Chorus
  - Cleaned up global variable usage and calls to C++ routines
  - TheNothingman contributed OLED support via Luma, tested using SH1106
  - bug fixes
Februari 2019:
  - Cosmetic changes and bugfixes
  - Added changing notemaps to webgui
  - Added Arpeggiator
  - Made radiobuttons in webgui more versatile
  - Enabled program changes via midi CC's for devices without program change button - THIS CHANGES THE CCmap.csv
January 2019:
  - Introduced mapping of the triggered notes to played notes - THIS CHANGES THE NAMES OF CSV FILES in configdir
    This enables retune/note, split keyboard, playing q-notes & dastgahs on western keyboards
  - Implemented %damp (for damp pedal and other usage) - THIS CHANGES THE configuration.txt
    This enables 1) damp, 2) a kind of pizzicato effect and 3) damping of last note(s)
  - Implemented %retrigger (once/loop modes and chords) - THIS CHANGES THE configuration.txt
  - Improved handling of MAX_POLYPONY and backtrack handling
  - Introduced override on midiCC mapping per voice
  - Cosmetic changes and bugfixes
December 2018
  - Reading of samplesets more robust
  - Support for quarter tones with possibility for q-note displacement other than 50 cents.
November 2018
  - Migrated alsamixer and serial midi coding to modules
  - Added midi running status to serialmidi module. This is untested as I don't have the HW for this.
  - Bugfixes and cleanups
September/October 2018
  - Upgraded necessary Debian components to support PI-3B+
  - Migrated parts of the code as modules into modules directory
  - Changed default internal sample dir from ./ to /samples/ to enable samples partition
  - Made local config available in /boot/samplerbox/ (so it can edited on the image from windows)
  - Moved midiCC mapping and chords&scales to csv files (editable as spreadsheets) in same dir
  - Added guidelines for using HiFiBerry devices /boot/config.txt and /boot/samplerbox/configuration.txt
  - Made GPIO pins allocation configurable as local config variables
  - Introduced backtracks with variable loop part between intro and outtro
    (requires rebuild of samplerbox_audio module)
  - Preset browsing with buttons now ignores undefined presets
  - Removed %%globaltranspose. Transpose is set on voice level and applies to keyboard range
  - Cleaned up fadeout(50) to fadeout(). Purpose of the variable was implemented July 31 2016 via %release
August 2018
  - reintegrated the I2C 7-segment display of the original samplerbox.
  - Fixed bug in setting freeverb parameters via MIDI controller
  - Fixed release processing during polyphonic safeguard being too fast giving choppy results
  - Made Control Change number configurable and included new effects in that
  - Introduced USE_48kHz parameter for 48K output devices (via permanent pitchbend = slight quality loss))
July 2018
  - changed midi default channel from 11 to 1
  - fixed error webgui, setting of the "midivolume" (cc=7) was broken
  - released Sbox20180716
  - fixed bug preventing samplesets without definition.txt to make any sound
  - added LFO with extra effects: Tremolo, Vibration and Rotate
  - fixed revmodel to compile warningfree, so -fpermissive compiler option no longer needed.
March 2018
    - Added remaining scales (missing semi notes)
    - bugfixes and minor+cosmetic changes
    - enabled gain on sample level (requires rebuild of samplerbox_audio module) 
Februari 2018
    - Added freeverb, polished the GUI, fixed bug in GUI-API
    - Added monophonic mode: note (incl related chordnotes) plays untill next note is pressed (or eof  is reached)
Januari 2018
    - Added webgui, examples.html contains some explanation
    - bugfixes and minor+cosmetic changes
November 2017
    - Fixed errors in F and Fm scale
October 2017
    - Enabled setting mode and gain on sample level
    - Removed the +64 method (affects Loop and On64)
      On64 replaced by Onc2 (hit same key again to stop)
      Loop mode now uses 127-note stop.
    - Introduced %%stopnotes to indicate where the stop area begins.
      Filling of notes is restricted to the area between %fillnotes and 127-%%stopnotes
    - Introduced "effects track": voice=0. Samples in here will overrule the respective notes in all defined voices.
      Voice0 cannot be played separately and %fillnotes is disabled (so it's individual notes only)
    - Fixed bugs when no definition.txt is present
September 2017
    - Added possibility to play in scales (using existing chords) giving a real "autochord" facility.
    - bugfix: chord=0 and scale=0 added to panic = all-notes/controllers-off.
July 2017
    - Implemented sampled release, release sound taken from same sample (start at last marker)
      Affected waveread and requires rebuild of samplerbox_audio module
      Grandorgue samples of pipe organs and harpsichords can now be played !
      New parameters (%%/%) xfadeout, xfadein and xfadevol for controlling crossfading the release sample
    - Disabled adjusting release at runtime with midi controller 72
June 2017
    - Enable "sensing" of (currently a limited set of) controls for the alsamixer
      Continue without volumebuttons if no valid control found
January 2017
    - Control generation of missing notes (%%/%fillnote)
December 2016 (needs recompile of samplerbox_audio.pyx)
    - Pitchbend depth can be adjusted via midi controller
    - Release/fadeout can be adapted per note in config.txt and via midi controller
November 2016 (no impact on samplerbox_audio.pyx)
    - Improved chords logic (now stops the notes originally started and not obsoleted by other chord)
      Switching chords while playing is now OK and when playing overlapping chords, the last takes precedence
    - Several bugfixes: 2*16 display and sustain-with-chords logic
    - Implemented MIDI controller volume knob. NB: it cannot read initial position, so you
      must use this knob once to start working properly. Initial value is 127 (max volume).
      When changing patches, the last value received from controller will be kept.
    - Replaced import "rtmidi_python as rtmidi" with rtmidi2
      see https://pypi.python.org/pypi/rtmidi2 for download and (install) docs
      Done for using multiple midi inputs (and more stability in general).
    - Implemented voices by AlexM: http://www.samplerbox.org/forum/184 (minor changes after testing)
    - Implemented "all sounds/notes off" (used by panic buttons) and changed patch load accordingly.
    - Implemented chords logic, starting with button control
    - Adapted screen and button behaviour to facilitate new features
    - Merged with Joseph's http://samplerbox.org/files/images/samplerbox_20160831.zip: Pi3 support + sounddevice.
      See Blog and http://samplerbox.org/forum/176.
    - Made opening of alsamixer dynamic because cardindex changes with the number of midi usb devices
      Plugin of a new midi device may still result in no sound, then restart or poweroff/on
      Alsamixer = physical volume control is now optional by local config
    - Implemented pitch-bend. Requires adaptation+regeneration of the samplerbox_audio module
    - Made "Presets 1-16 instead of 0-15" optional by parameter PRESETBASE
    - Cleaned up and made code code more robust
August 2016
    - Implemented mode=Loo2, to enable ending loop with the same key
      This mimics Korgs' KAOSS and some groove boxes.
      Mind samples without loop markers: you have to "end" them too before playing again
      This explains also why there is no "once" equivalent; I think it's too inconvenient.
    - Added tables to init when patch loads ((sustain)playingnotes etc)
July 2016
    - Set midinote 60 to middle C (C4).
    - commented most print statements
    - Implemented gain parameter in definition.txt to adjust to sample set input level.
    - removed volume from definition.txt, this is not logical anymore (use buttons for this)
    - Implemented release parameter in definition.txt to adjust to fadeout time.
June 2016
    - changed volume handling from process approach to API (alsaaudio) to improve stability
    - Included accurate velocity control by Erik Nieuwlands: http://www.nickyspride.nl/sb2/
    - fixed memory leak caused by ignored note-off.
      Done by removing playingnotes entries when same note is triggerered again, so theoretical max now 64 or 128 active notes, depending play mode.
      Solution may still conflict with polyphony restriction..open point for some next release..
April 10 2016 based on Joseph's June 19th 2015 version
    - Play samples in playback mode (ignoring normal note-off),
      driven by "mode=keyb|once|on64|loop" in definition.txt, default=once
    - filter the midi channel (see LOCAL CONFIG below)
    - Presets 1-16 instead of 0-15, so the preset/folder name and program change number correspond
    - Replaced 7segment display code by 16x2LCD
    - Use 3 buttons: one for choosing functions and two other for +/-.
      functions: preset, channel, volume, transpose, renewUSB/MidiMute.
    - Volume handling based on code by Mirco: http://www.samplerbox.org/forum/51
