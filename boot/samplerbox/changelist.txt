This file contains changelog of samplerbox.py
For changes on samplerbox_audio.pyx, see top of the source file
For changes on the image, see http://homspace.xs4all.nl/homspace/samplerbox/SBbuild.html

April 10 2016 based on Joseph's June 19th 2015 version
    - Play samples in playback mode (ignoring normal note-off),
      driven by "mode=keyb|once|on64|loop" in definition.txt, default=once
    - filter the midi channel (see LOCAL CONFIG below)
    - Presets 1-16 instead of 0-15, so the preset/folder name and program change number correspond
    - Replaced 7segment display code by 16x2LCD
    - Use 3 buttons: one for choosing functions and two other for +/-.
      functions: preset, channel, volume, transpose, renewUSB/MidiMute.
    - Volume handling based on code by Mirco: http://www.samplerbox.org/forum/51
June 18 2016
    - changed volume handling from process approach to API (alsaaudio) to improve stability
    - Included accurate velocity control by Erik Nieuwlands: http://www.nickyspride.nl/sb2/
    - fixed memory leak caused by ignored note-off.
      Done by removing playingnotes entries when same note is triggerered again, so theoretical max now 64 or 128 active notes, depending play mode.
      Solution may still conflict with polyphony restriction..open point for some next release..
July 2 2016
    - Set midinote 60 to middle C (C4).
    - commented most print statements
July 23 2016
    - Implemented gain parameter in definition.txt to adjust to sample set input level.
    - removed volume from definition.txt, this is not logical anymore (use buttons for this)
July 31 2016
    - Implemented release parameter in definition.txt to adjust to fadeout time.
August 30 2016
    - Implemented mode=Loo2, to enable ending loop with the same key
      This mimics Korgs' KAOSS and some groove boxes.
      Mind samples without loop markers: you have to "end" them too before playing again
      This explains also why there is no "once" equivalent; I think it's too inconvenient.
    - Added tables to init when patch loads ((sustain)playingnotes etc)
November 5 2016
    - Implemented MIDI controller volume knob. NB: it cannot read initial position, so you
      must use this knob once to start working properly. Initial value is 127 (max volume).
      When changing patches, the last value received from controller will be kept.
    - Replaced import "rtmidi_python as rtmidi" with rtmidi2
      see https://pypi.python.org/pypi/rtmidi2 for download and (install) docs
      Done for using multiple midi inputs (and more stability in general).
    - Implemented voices by AlexM: http://www.samplerbox.org/forum/184 (minor changes after testing)
    - Implemented "all sounds/notes off" (used by panic buttons) and changed patch load accordingly.
    - Implemented chords logic, starting with button control
    - Adapted screen and button behaviour to facilitate new features
    - Merged with Joseph's http://samplerbox.org/files/images/samplerbox_20160831.zip: Pi3 support + sounddevice.
      See Blog and http://samplerbox.org/forum/176.
    - Made opening of alsamixer dynamic because cardindex changes with the number of midi usb devices
      Plugin of a new midi device may still result in no sound, then restart or poweroff/on
      Alsamixer = physical volume control is now optional by local config
    - Implemented pitch-bend. Requires adaptation+regeneration of the samplerbox_audio module
    - Made "Presets 1-16 instead of 0-15" optional by parameter PRESETBASE
    - Cleaned up and made code code more robust
November 18-20 2016 (no impact on samplerbox_audio.pyx)
    - Improved chords logic (now stops the notes originally started and not obsoleted by other chord)
      Switching chords while playing is now OK and when playing overlapping chords, the last takes precedence
    - Several bugfixes: 2*16 display and sustain-with-chords logic
December 2016 (needs recompile of samplerbox_audio.pyx)
    - Pitchbend depth can be adjusted via midi controller
    - Release/fadeout can be adapted per note in config.txt and via midi controller
January 2017
    - Control generation of missing notes (%%/%fillnote)
June 2017
    - Enable "sensing" of (currently a limited set of) controls for the alsamixer
      Continue without volumebuttons if no valid control found
July 2017
    - Implemented sampled release, release sound taken from same sample (start at last marker)
      Affected waveread and requires rebuild of samplerbox_audio module
      Grandorgue samples of pipe organs and harpsichords can now be played !
      New parameters (%%/%) xfadeout, xfadein and xfadevol for controlling crossfading the release sample
    - Disabled adjusting release at runtime with midi controller 72
September 2017
    - Added possibility to play in scales (using existing chords) giving a real "autochord" facility.
    - bugfix: chord=0 and scale=0 added to panic = all-notes/controllers-off.
October 2017
    - Enabled setting mode and gain on sample level
    - Removed the +64 method (affects Loop and On64)
      On64 replaced by Onc2 (hit same key again to stop)
      Loop mode now uses 127-note stop.
    - Introduced %%stopnotes to indicate where the stop area begins.
      Filling of notes is restricted to the area between %fillnotes and 127-%%stopnotes
    - Introduced "effects track": voice=0. Samples in here will overrule the respective notes in all defined voices.
      Voice0 cannot be played separately and %fillnotes is disabled (so it's individual notes only)
    - Fixed bugs when no definition.txt is present
November 2017
    - Fixed errors in F and Fm scale
Januari 2018
    - Added webgui, examples.html contains some explanation
    - bugfixes and minor+cosmetic changes
Februari 2018
    - Added freeverb, polished the GUI, fixed bug in GUI-API
    - Added monophonic mode: note (incl related chordnotes) plays untill next note is pressed (or eof  is reached)
March 2018
    - Added remaining scales (missing semi notes)
    - bugfixes and minor+cosmetic changes
    - enabled gain on sample level (requires rebuild of samplerbox_audio module) 
July 2018
  - changed midi default channel from 11 to 1
  - fixed error webgui, setting of the "midivolume" (cc=7) was broken
  - released Sbox20180716
  - fixed bug preventing samplesets without definition.txt to make any sound
  - added LFO with extra effects: Tremolo, Vibration and Rotate
  - fixed revmodel to compile warningfree, so -fpermissive compiler option no longer needed.
August 2018
  - reintegrated the I2C 7-segment display of the original samplerbox.
  - Fixed bug in setting freeverb parameters via MIDI controller
  - Fixed release processing during polyphonic safeguard being too fast giving choppy results
  - Made Control Change number configurable and included new effects in that
  - Introduced USE_48kHz parameter for 48K output devices (via permanent pitchbend = slight quality loss))
September/October 2018
  - Upgraded necessary Debian components to support PI-3B+
  - Migrated parts of the code as modules into modules directory
  - Changed default internal sample dir from ./ to /samples/ to enable samples partition
  - Made local config available in /boot/samplerbox/ (so it can edited on the image from windows)
  - Moved midiCC mapping and chords&scales to csv files (editable as spreadsheets) in same dir
  - Added guidelines for using HiFiBerry devices /boot/config.txt and /boot/samplerbox/configuration.txt
  - Made GPIO pins allocation configurable as local config variables
  - Introduced backtracks with variable loop part between intro and outtro
    (requires rebuild of samplerbox_audio module)
  - Preset browsing with buttons now ignores undefined presets
  - Removed %%globaltranspose. Transpose is set on voice level and applies to keyboard range
  - Cleaned up fadeout(50) to fadeout(). Purpose of the variable was implemented July 31 2016 via %release
November 2018
  - Migrated alsamixer and serial midi coding to modules
  - Added midi running status to serialmidi module. This is untested as I don't have the HW for this.
  - Bugfixes and cleanups
December 2018
  - Reading of samplesets more robust
  - Support for quarter tones with possibility for q-note displacement other than 50 cents.
January 2019:
  - Introduced mapping of the triggered notes to played notes - THIS CHANGES THE NAMES OF CSV FILES in configdir
    This enables retune/note, split keyboard, playing q-notes & dastgahs on western keyboards
  - Implemented %damp (for damp pedal and other usage) - THIS CHANGES THE configuration.txt
    This enables 1) damp, 2) a kind of pizzicato effect and 3) damping of last note(s)
  - Implemented %retrigger (once/loop modes and chords) - THIS CHANGES THE configuration.txt
  - Improved handling of MAX_POLYPONY and backtrack handling
  - Introduced override on midiCC mapping per voice
  - Cosmetic changes and bugfixes
Februari 2019:
  - Cosmetic changes and bugfixes
  - Added changing notemaps to webgui
  - Added Arpeggiator
  - Made radiobuttons in webgui more versatile
  - Enabled program changes via midi CC's for devices without program change button - THIS CHANGES THE CCmap.csv
March/April 2019:
  - Added Wah's, Delay/flanger, Moog lowpass and Chorus
  - Cleaned up global variable usage and calls to C++ routines
  - TheNothingman contributed OLED support via Luma, tested using SH1106
  - bug fixes