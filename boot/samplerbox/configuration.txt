#
#  SamplerBox local configuration
#
#  SamplerBox extended by HansEhv (https://github.com/hansehv)
#  see docs at  https://homspace.nl/homspace
#  license: Creative Commons ShareAlike 3.0 (http://creativecommons.org/licenses/by-sa/3.0/)
#
###################################################################################
##  Adapt to your setup !
##  Don't delete value definitions, program expects them all (no internal defaults)
##    - exception to this rule: GPIO definitions of unused devices
##  Values are used 'as is' with hardly any error checking, some friendly warnings:
##    - read the comment ... and do it right, because:
##    - out of range filter values can really hurt an audio system
##    - other errors may just lead to malfunctioning in unexpected ways.
###################################################################################
[config]

######  General values ######
#
AUDIO_DEVICE_ID = -1			; -1=autodetect, specify ID of your device to override
AUDIO_DEVICE_NAME = Detect      	; ..or specify (part of) it's name. SB uses the first match of ID or NAME.
MIXER_CONTROL = Detect          	; Fill this to override autodetection, specify None to disable alsa volume control
SAMPLERATE = 44100              	; Sets value for wav's and audio device (these have to be the same)
BLOCKSIZE = High                	; Blocksize or "Low"/"High". High may cause latency, low may cause distortion; just try.
#                               	  Valid numbers for blocksize are shown in the console messages when started manually
USE_48kHz = False               	; Sets audio to 48000Hz while keeping wav's on 44100Hz. Try to avoid this...
USE_SERIALPORT_MIDI = False     	; Set to True to enable MIDI IN via SerialPort (e.g. RaspberryPi's GPIO UART pins)
#		      			  For serial MIDI you will also need to uncomment UART lines in /boot/config.txt
USE_HD44780_16x2_LCD = False    	; Set to True to use a 16x2 direct connected/wired HD44780 LCD
#                               	  If you use an I2C-HD44780, above option should be false !!!
USE_I2C_LCD = False             	; Set True or 16x2 (=True) or 20x4 to use a 16x2 or 20x4 I2C connected HD44780 LCD
USE_OLED = False                	; Set True to use an OLED display via SPI. Configure below
USE_PIMORONI_LCD = False        	; Set True to use LCD of Pimoroni PirateAudio hat. Configure below
USE_I2C_7SEGMENTDISPLAY = False 	; Set True to use a Sparkfun ATMega328 controlled 7-segment display via I2C
USE_I2C_7SEGMENTDISPLAY_HT16K33 = False ; Set True to use a HT16K33 based 7-segment display via I2C
USE_BUTTONS = False               	; Set True to use the GPIO buttons
USE_LEDS = False                	; Set True to use LED's connected to RaspberryPi's GPIO pins
USE_HTTP_GUI = True             	; should webgui server be started?
USE_IPv6 = False                	; Enables IPv6 on http_gui and shows the IPv6 addresses on displays
USE_SMFPLAYER = True            	; Should internal "sequencer" be started? If True, it will be added to the multi-timbrals
MULTI_TIMBRALS =                	; Multi timbral devices, comma separated. Exactly as in the midi open message, but without quotes!
MIDI_THRU =                     	; Devices to receive SB's input, either "All" without quotes or
#                               	  comma separated values, use regular expressions for patterns (see docs on MIDI-THRU)
MAX_POLYPHONY = 80              	; This can be set higher, but 80 is a safe value
MAX_MEMLOAD = 90                	; Used memory percentage at which loading of samples stops
MIDI_CHANNEL = 1                	; midi channel
DRUMPAD_CHANNEL = 10            	; midi channel of the drumpads (if applicable)
NOTES_CC = 119                  	; Controlnumber used when using music notes for controls (=as CC).
BOXSAMPLE_MODE = Keyb	        	; we need a default: original samplerbox
#		Keyb	- reacts on "keyboard" interaction
#		Once	- ignores loop markers ("just play the sample with option to stop")
#		Onc2	- ignores loop markers with note-off by same note ("just play the sample with option to stop")
#		Loop	- recognize loop markers, note-off by 127-note ("just play the loop with option to stop")
#		Loo2	- recognize loop markers, note-off by same note ("just play the loop with option to stop")
BOXVELOCITY_LEVELS = 1              	; Granularity of velocity samples/levels (127 is original samplerbox)
BOXVELOCITY_MODE = Accurate     	; Accurate: calculated in 127 steps, Sample: determined by wavs/level (original samplerbox)
#		Sample	- velocity equals sampled value, requires multiple samples to get differentation
#		Accurate- velocity as played, allows for multiple (normalized!) samples for timbre
BOXSTOP127 = 109                      	; Value of "Right side", "Left side" has some notes slack
#		88-key:	- 108=C8
#		77-key:	- 103=G7
#		61-key:	- 96=C7
volume = 87				; the startup (alsa=output) volume (0-100)
volumeCC = 1.0                  	; assumed value of the volumeknob controller before first use, max=1.0 (the knob can only decrease).
BOXRELEASE = 30                 	; 30 results in the samplerbox default (FADEOUTLENGTH=30000)
BOXDAMP = 10                    	; the "release value for damp": how quick do sounds die on damp pedal and retrigger
BOXDAMPNOISE = False            	; play release sample when damp is used (for damper noise or rattling snares etc)
BOXRETRIGGER = R                	; action on retriggered still playing notes (occurs in once/loop modes and chords):
#               R:      - Noteoff and fadeout according release value
#               D:      - Noteoff and fadeout according damp value
#               Y:      - Yes, retrigger is allowed, keep the playing sound
BOXRELSAMPLE = N                	; release samples: N=none, E=Embedded, S=Separate
BOXXFADEOUT = 10                	; crossfade glues the sample to the release sample
BOXXFADEIN = 1                  	; crossfade glues the sample to the release sample
BOXXFADEVOL = 1.0               	; crossfade glues the sample to the release sample
PRESETBASE = 0                  	; Does the programchange / sample set start at 0 (MIDI style) or 1 (human style)
PRESET = 0                      	; the default patch to load
PITCHRANGE = 12                 	; default range of the pitchwheel in semitones (max=12 is een octave up&down)
PITCHBITS = 7                   	; pitchwheel resolution, 0=disable, max=14 (=16384 steps)
#                               	; values below 7 will produce bad results
#
######  Mapping of GPIO_pins: adapt to your hardware wiring/setup  #####
# GPIO modules in this build use mode=BCM. Modes cannot be mixed.
# Make sure used devices do not overlap in their pin usage (except power/gnd ofcourse),
# but for unused devices it is safe to keep or delete the definitions here as you like.
# In example below buttons 18&27 overlap; I use a box with buttons&LCD and one with HiFiBerry&Leds.
# Some devices require no mapping here, but do use pins:
#     -- EEPROM      : 0,1
#     -- Serial Port : 14,15
#     -- I2C         : 2,3
#     -- HiFiBerry   : 2,3,18,19,20,21
#     -- PirateAudio Hat :  5 (Button A), 6 (Button B), 16 (Button X), 24 (Button Y)
#
#     -- USE_BUTTONS --		; A valid GPIO value will activate the button
BUT_incr=05                     ; Increase button, increases value/proceeds to next menu choice
BUT_decr=13                     ; Decrease button, opposite of above. In 3-button setup it will return from submenu
BUT_sel=26                      ; Select button, either selects menu choice or returns to menu from value set
BUT_ret=xx                      ; if this button is available, it returns to menu and the decr-button is consistent
#
#     -- USE_LEDS --
LED_red=27                      ; Red light
LED_green=22                    ; Green light
#
#     -- USE_HD44780_16x2_LCD -- 4 bits operation
LCD_RS=7                        ; LCD Register select
LCD_E=8                         ; Enable
LCD_D4=27                       ; Data4 <== this overlap doesn't matter as only one hw display can be defined
LCD_D5=17                       ; Data5
LCD_D6=18                       ; Data6 <== reprogram/rewire if using HiFiberry compatible
LCD_D7=4                        ; Data7
#
#     -- USE_I2C_LCD -- HD44780 (I2C connection), either 16x2 or 20x4
I2C_LCD_ADDR=0x3f               ; Adapt to your I2C chip (e.g. PCF8574A(T) uses 0x3f, whereas PCF8574(T) uses 0x27).
I2C_LCD_PORT=1                  ; Similar remark here :-)
#
#     -- USE_OLED -- OLED connection and device settings (SPI connection)
OLED_DRIVER = SH1106            ; Set to the correct OLED driver chip, one of: SH1106 or SSD1306 (more to come)
OLED_RST=25                     ; Reset pin
OLED_CS=8                       ; Chips select pin
OLED_DC=24                      ; data/command pin
OLED_PORT=0                     ; OLED device port, default should be fine
OLED_WIDTH=128                  ; width of the display in pixels
OLED_HEIGHT=64                  ; height of the display in pixels
OLED_PADDING=-2                 ; padding around the display content, important for readability
#
#     -- USE_PIMORONI_LCD -- LCD connection and device settings (SPI connection)
PIM_LCD_DRIVER = ST7789         ; Set to the correct Lcd driver chip, one of: SH1106 or SSD1306 (more to come)
PIM_LCD_BL=13                   ; Backlight pin
PIM_LCD_CS=1                    ; Chips select pin
PIM_LCD_DC=9                    ; data/command pin
PIM_LCD_PORT=0                  ; LCD device port, default should be fine
PIM_LCD_WIDTH=240               ; width of the display in pixels
PIM_LCD_HEIGHT=240              ; height of the display in pixels
PIM_LCD_PADDING=-2              ; padding around the display content, important for readability
#
########  Default filter values ########
#         R E V E R B
Reverb=Off                      ; Default state of the reverb (On/Off)
FVroomsize=0.5                  ; Roomsize (0-1), package default 0.5
FVdamp=0.4                      ; Damp (0-1), package default 0.4
FVlevel=0.4                     ; Wet (0-1), implicit dry: package default 1/3 and 0
FVwidth=1.0                     ; Width (0-1), package default 1
#         (auto) W A H
Wah=Off                         ; Default state of the reverb (Off/EnvelopeWah/LFOwah/ManualWah)
AWqfactor=0.25                  ; Qfactor 0.25-25
AWmixing=0.9			; Wet (0-1), implicit dry
AWminfreq=20                    ; range bottom 20-500
AWmaxfreq=3000                  ; range top 1000-10000
AWattack=0.04                   ; Envelope: begin detection 0.5-0.005
AWrelease=0.002                 ; Envelope: end detection 0.05-0.0005
AWspeed=500                     ; LFO: speed of the the oscillator 100-1100
AWlvlrange=90                   ; LFO+Pedal: sensitivity (0-100, 0 = filter without wah)
AWpedal=0                       ; Position of the wah-wah pedal
#         D E L A Y  /  F L A N G E R
Delay=Off                       ; Default state of the delay (Off/Echo/Flanger)
DLYfb=0.7                       ; Feedback (0-1), amount passed to loop ("next bucket")
DLYwet=0.7                      ; effectvolume (0-1)
DLYdry=1.0                      ; source volume (0-1). Echo only; flanger sets dry via wet.
DLYtime=10000.0                 ; delay time (1000-61000) for echo
DLYsteep=1                      ; gradient (1-11), steepness of the flangersweep
DLYsteplen=1000.0               ; steplen/time (300-3300) of the flanger delay
DLYmin=10.0                     ; minimum delay (5-25) of the flanger
DLYmax=80.0                     ; maximum delay (50-150) of the flanger
#         M O O G L A D D E R  (lowpass filter)
#         Out-of-range values can have serious implications
Moog=Off                        ; Default state of the moog ladder filter (On/Off)
LFresonance=0.4                 ; resonance: 0-3.8. Exceeding 3.8 may cause crashes
LFcutoff=10000.0                ; cutoff frequency, 1000-11000
LFdrive=1.0                     ; filter inputlevel, 1-21
LFlvl=0.5                       ; wetlevel, 0-1: dry=1-wet
LFgain=4.0                      ; filtergain, 1-11. Depends on sound, keep default value <5!
#         O V E R D R I V E  (softclip with harmonics filtering)
Overdrive=Off                   ; Default state of the limiter (On/Off)
ODboost=30.0                    ; target volume: 15-65
ODdrive=5.0                     ; level of distortion: 1-11
ODtone=30.0                     ; tone = level of low pass filtering: 0-95
ODlvl=1.0                       ; wetlevel, 0-1: dry=1-wet
#         P E A K   L I M I T E R
Limiter=Off                     ; Default state of the limiter (On/Off)
PLthresh=90.0                   ; threshold: 70-110
PLattack=1.0                    ; attack time: 1-11
PLrelease=11.0                  ; release time: 5-25
#         M O D U L A T E
LFOeffect=Off                   ; default state of the LFO=Modulator (Off/Vibrato/Tremolo/Panning/Rotate)
VIBRpitch=0.5                   ; Vibrato note variation
VIBRspeed=15                    ; 14 ==> 10Hz on saw & block, 5Hz on triangle
VIBRtrill=False                 ; a vibratotrill is a kind of yodeling
TREMampl=.18                    ; amplitude variation 0-1, resulting volume is between full=1 and full-TREMampl
TREMspeed=3                     ; See VIBRspeed
TREMtrill=False                 ; a tremolotrill is a goatlike sound (country singers??)
PANwidth=1                      ; maximum panning width
PANspeed=1                      ; See VIBRspeed
#         C H O R U S
Chorus=Off                      ; Default state of chorus (On/Off)
CHOdepth=4                      ; 2-15, level of "unsync/untune" of the voices
CHOgain=0.4                     ; 0.3-0.8, volume of the separate voices
